plugins {
    id 'java-gradle-plugin'
    id 'groovy'
    id 'com.gradle.plugin-publish' version '0.9.8'
    id 'com.github.sherter.google-java-format' version '0.6'
    id 'net.ltgt.errorprone' version '0.0.13' apply false
}

googleJavaFormat {
    toolVersion = '1.4'
}

group 'net.ltgt.gradle'

sourceCompatibility = targetCompatibility = 1.8

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(publishPlugins)) {
        assert 'git diff --quiet --exit-code'.execute(null, rootDir).waitFor() == 0 : "Working tree is dirty"
        def process ='git describe --exact-match'.execute(null, rootDir)
        assert process.waitFor() == 0 : "Version is not tagged"
        version = process.text.trim() - ~'^v'

        if (JavaVersion.current().isJava9Compatible()) {
            tasks.withType(JavaCompile).all { options.compilerArgs.addAll(['--release', '8']) }
            tasks.withType(GroovyCompile).all { options.compilerArgs.addAll(['--release', '8']) }
        }
    } else {
        apply plugin: 'net.ltgt.errorprone'

        dependencies {
            errorprone 'com.google.errorprone:error_prone_core:2.1.1'
        }
    }
}

repositories {
    jcenter()
}
dependencies {
    testCompile localGroovy()
    testCompile 'com.netflix.nebula:nebula-test:4.0.0'
    testCompile('org.spockframework:spock-core:1.0-groovy-2.4') {
        exclude group: 'org.codehaus.groovy'
    }
}

test {
    inputs.file tasks.jar
    inputs.property "test.gradle-versions", project.findProperty("test.gradle-versions")

    systemProperty("plugin", tasks.jar.archivePath)
    if (project.hasProperty("test.gradle-versions")) {
        systemProperty("test.gradle-versions", project.property("test.gradle-versions"))
    }

    testLogging {
        showExceptions = true
        showStackTraces = true
        exceptionFormat = 'FULL'
    }
}

gradlePlugin {
    plugins {
        errorpronePlugin {
            id = 'net.ltgt.errorprone'
            implementationClass = 'net.ltgt.gradle.errorprone.ErrorPronePlugin'
        }
        errorproneBasePlugin {
            id = 'net.ltgt.errorprone-base'
            implementationClass = 'net.ltgt.gradle.errorprone.ErrorProneBasePlugin'
        }
    }
}

pluginBundle {
    website = 'https://github.com/tbroyer/gradle-errorprone-plugin'
    vcsUrl = 'https://github.com/tbroyer/gradle-errorprone-plugin'
    description = 'Gradle plugin to use the error-prone compiler for Java'
    tags = [ 'javac', 'error-prone' ]

    plugins {
        errorpronePlugin {
            id = 'net.ltgt.errorprone'
            displayName = 'Gradle error-prone plugin'
        }
        errorproneBasePlugin {
            id = 'net.ltgt.errorprone-base'
            displayName = 'Gradle error-prone base plugin'
        }
    }

    mavenCoordinates {
        groupId = project.group
        artifactId = project.name
    }
}
project.afterEvaluate {
  verifyGoogleJavaFormat {
    ignoreFailures true
  }
}
